# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: aws-nodejs # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: us-east-1
  iamRoleStatements:
      - Effect: 'Allow'
        Action:
          - "sns:Publish"
        Resource:
          - "*"

      - Effect: 'Allow'
        Action:
          - 'sqs:*'
        Resource:
          - "*"

# you can add statements to the Lambda function's IAM Role here

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  getDataItemById:
    handler: handler.getDataItemById
    events:
      - http:
          path: first-endpoint/{id}
          method: get


  saveData:
    handler: handler.saveData
    events:
      - http:
          path: first-endpoint
          method: post

  getAllData:
      handler: handler.getAllData
      events:
        - http:
            path: first-endpoint
            method: get

  updateItemById:
      handler: handler.updateItemById
      events:
        - http:
            path: second-endpoint
            method: put

  deleteItemById:
        handler: handler.deleteItemById
        events:
          - http:
              path: third-endpoint
              method: delete

  addNote:
    handler: addNote.addNote
    events:
      - http:
          path: notes
          method: post
          cors: true

  analyzeNote:
    handler: analyzeNote.analyzeNote
    events:
      - sns: analyzeNote


#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
resources:
  Resources:
    TacosDB:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
         - AttributeName: id
           AttributeType: S
         - AttributeName: name
           AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
          -
            AttributeName: name
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: TacoGallery
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  serverless-offline-sns:
    port: 4002 # a free port for the sns server to run on
    debug: false

